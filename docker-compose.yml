#
# Copyright Â© 2016-2017 Hashmap, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: '2.1'

services:
  tb:
    build: "tb/"
    ports:
      - "8080:8080"
      - "1883:1883"
      - "5683:5683/udp"
      - "9999:9999"
    env_file:
      - tb.env
    environment:
      - ADD_SCHEMA_AND_SYSTEM_DATA=${ADD_SCHEMA_AND_SYSTEM_DATA}
      - ADD_DEMO_DATA=${ADD_DEMO_DATA}
    links:
      - zk
      - kafka
    volumes:
      - "${HSQLDB_DATA_DIR}:/usr/share/thingsboard/data/sql"
    entrypoint: /run-application.sh
  cassandra:
    image: "cassandra:3.9"
    hostname: cassandra
    ports:
      - "9042"
      - "9160"
    volumes:
      - "${CASSANDRA_DATA_DIR}:/var/lib/cassandra"
  postgres:
    image: "postgres:9.6"
    ports:
    - "5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - "${POSTGRES_DATA_DIR}:/var/lib/postgresql/data"
  zk:
    build: "zookeeper/"
    hostname: zk
    ports:
      - "2181:2181"
  nifi:
    build: "nifi/"
    ports:
    - "9090:8080"
    - "9191:9191"
    volumes:
      - "${NIFI_FLOWFILE_REPO_DIR}:/opt/nifi/nifi-1.3.0/flowfile_repository"
      - "${NIFI_DATABASE_REPO_DIR}:/opt/nifi/nifi-1.3.0/database_repository"
      - "${NIFI_CONTENT_REPO_DIR}:/opt/nifi/nifi-1.3.0/content_repository"
      - "${NIFI_PROVENANCE_REPO_DIR}:/opt/nifi/nifi-1.3.0/provenance_repository"
      - "${NIFI_LOG_DIR}:/opt/nifi/nifi-1.3.0/logs"
  kafka:
    build: "kafka/"
    ports:
      - "9092:9092"
    depends_on:
      zk:
        condition: service_healthy
    links:
      - "zk"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 16000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  spark-master:
    build: "spark-livy/"
    hostname: spark-master
    environment:
      MASTER: spark://spark-master:7077
      SPARK_CONF_DIR: /conf
      SPARK_PUBLIC_DNS: 127.0.0.1
      SPARK_WORKER_WEBUI_PORT: 8181
    expose:
      - 7001
      - 7002
      - 7003
      - 7004
      - 7005
      - 7006
      - 7077
      - 6066
      - 8181
      - 8998
    ports:
      - 4040:4040
      - 6066:6066
      - 7077:7077
      - 8181:8080
      - 8998:8998
    links:
      - kafka
    volumes:
      - ./conf/master:/conf
      - ./data:/tmp/data
      - "${SPARK_JAR_DIR}:/usr/livy-server-0.3.0/upload"
  hbase:
    build: "hbase/"
    hostname: hbase    
    depends_on:
      zk:
        condition: service_healthy
    links:
      - "zk"
    ports:
     - "60000:60000"
     - "60010:60010"
     - "60020:60020"
     - "60030:60030"
     - "8070:8070"
     - "8090:8090"
  openldap:
    image: osixia/openldap:1.1.9
    container_name: openldap
    environment:
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: "Example Inc."
      LDAP_DOMAIN: "example.org"
      LDAP_BASE_DN: ""
      LDAP_ADMIN_PASSWORD: "admin"
      LDAP_CONFIG_PASSWORD: "config"
      LDAP_READONLY_USER: "false"
      #LDAP_READONLY_USER_USERNAME: "readonly"
      #LDAP_READONLY_USER_PASSWORD: "readonly"
      LDAP_RFC2307BIS_SCHEMA: "false"
      LDAP_BACKEND: "hdb"
      LDAP_TLS: "true"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
      LDAP_TLS_PROTOCOL_MIN: "3.1"
      LDAP_TLS_VERIFY_CLIENT: "demand"
      LDAP_REPLICATION: "false"
      #LDAP_REPLICATION_CONFIG_SYNCPROV: "binddn="cn=admin,cn=config" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical"
      #LDAP_REPLICATION_DB_SYNCPROV: "binddn="cn=admin,$LDAP_BASE_DN" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase="$LDAP_BASE_DN" type=refreshAndPersist interval=00:00:00:10 retry="60 +" timeout=1 starttls=critical"
      #LDAP_REPLICATION_HOSTS: "#PYTHON2BASH:['ldap://ldap.example.org','ldap://ldap2.example.org']"
      KEEP_EXISTING_CONFIG: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
    tty: true
    stdin_open: true
    volumes:
      - "${OPENLDAP_DATA_DIR}:/var/lib/ldap"
      - "${OPENLDAP_DATA_DIR}:/etc/ldap/slapd.d"
      - "${OPENLDAP_DATA_DIR}:/container/service/slapd/assets/certs/"
    ports:
      - "389:389"
      - "636:636"
    domainname: "example.org" # important: same as hostname
    hostname: "example.org"
  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: phpldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "openldap"
      PHPLDAPADMIN_HTTPS: "false"
    ports:
      - "9080:80"
    depends_on:
      - openldap
